name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # PR-specific checks (metadata validation)
  pr-metadata:
    name: "PR Metadata Validation"
    runs-on: [self-hosted, Linux, ARM64, nxp-ci]
    if: github.event.pull_request.draft == false
    steps:
      - name: Check PR title and description
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          echo "=== PR Metadata Check ==="

          # Check PR has a meaningful title
          if [ ${#PR_TITLE} -lt 10 ]; then
            echo "‚ö†Ô∏è  PR title might be too short: '$PR_TITLE'"
            echo "Consider using format: 'type: brief description'"
            echo "Examples: 'feat: add threshold alerts', 'fix: memory leak in buffer'"
          else
            echo "‚úì PR title looks good: '$PR_TITLE'"
          fi

          # Check PR has description
          PR_BODY_LENGTH=${#PR_BODY}
          if [ -z "$PR_BODY" ] || [ "$PR_BODY_LENGTH" -lt 20 ]; then
            echo "‚ö†Ô∏è  PR description is very short or missing"
            echo "Consider adding:"
            echo "  - What changed and why"
            echo "  - How to test the changes"
            echo "  - Any breaking changes or migrations needed"
          else
            echo "‚úì PR has description (${PR_BODY_LENGTH} characters)"
          fi

          # Check for conventional commit prefix
          if echo "$PR_TITLE" | grep -qE "^(feature|fix|docs|style|refactor|test|chore|ci|perf|build):"; then
            echo "‚úì PR title follows conventional commit format"
          else
            echo "üí° Tip: Consider using conventional commit format (feature:|fix:|docs:|etc.)"
          fi

      - name: Check for common issues
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          # Check for WIP or draft indicators in title
          if echo "$PR_TITLE" | grep -qiE "\b(wip|draft|do not merge|dnm)\b"; then
            echo "‚ö†Ô∏è  PR title contains WIP/Draft markers"
            echo "Consider marking as draft if not ready for review"
          fi

          echo "‚úì PR metadata checks complete"

  # Reuse the main CI workflow with PR-optimized settings
  run-ci-pipeline:
    name: "Run CI Pipeline"
    uses: ./.github/workflows/ci.yml
    with:
      changed-files-only: true
      skip-release: true
    secrets: inherit
